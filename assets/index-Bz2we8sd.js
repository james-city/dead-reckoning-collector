var x=Object.defineProperty;var L=(a,t,e)=>t in a?x(a,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):a[t]=e;var c=(a,t,e)=>L(a,typeof t!="symbol"?t+"":t,e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))r(o);new MutationObserver(o=>{for(const n of o)if(n.type==="childList")for(const i of n.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&r(i)}).observe(document,{childList:!0,subtree:!0});function e(o){const n={};return o.integrity&&(n.integrity=o.integrity),o.referrerPolicy&&(n.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?n.credentials="include":o.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function r(o){if(o.ep)return;o.ep=!0;const n=e(o);fetch(o.href,n)}})();const C="DeadReckoningDB",O=1,s="sensorData";class B{constructor(){c(this,"db",null)}async init(){return new Promise((t,e)=>{const r=indexedDB.open(C,O);r.onerror=()=>e(r.error),r.onsuccess=()=>{this.db=r.result,t()},r.onupgradeneeded=o=>{const n=o.target.result;n.objectStoreNames.contains(s)||n.createObjectStore(s,{keyPath:"timestamp"}).createIndex("timestamp","timestamp",{unique:!1})}})}async addData(t){if(!this.db)throw new Error("Database not initialized");return new Promise((e,r)=>{const i=this.db.transaction([s],"readwrite").objectStore(s).add(t);i.onerror=()=>r(i.error),i.onsuccess=()=>e()})}async getAllData(){if(!this.db)throw new Error("Database not initialized");return new Promise((t,e)=>{const n=this.db.transaction([s],"readonly").objectStore(s).getAll();n.onerror=()=>e(n.error),n.onsuccess=()=>t(n.result)})}async clearData(){if(!this.db)throw new Error("Database not initialized");return new Promise((t,e)=>{const n=this.db.transaction([s],"readwrite").objectStore(s).clear();n.onerror=()=>e(n.error),n.onsuccess=()=>t()})}async getDataCount(){if(!this.db)throw new Error("Database not initialized");return new Promise((t,e)=>{const n=this.db.transaction([s],"readonly").objectStore(s).count();n.onerror=()=>e(n.error),n.onsuccess=()=>t(n.result)})}}const l=new B;class N{constructor(){c(this,"isRecording",!1);c(this,"motionPermissionGranted",!1);c(this,"locationPermissionGranted",!1);c(this,"watchId",null);c(this,"motionHandler",null);c(this,"orientationHandler",null)}async requestPermissions(){if(typeof DeviceMotionEvent<"u"&&"requestPermission"in DeviceMotionEvent)try{const t=await DeviceMotionEvent.requestPermission();this.motionPermissionGranted=t==="granted"}catch(t){console.error("Error requesting motion permission:",t)}else this.motionPermissionGranted=!0;try{await new Promise((t,e)=>{navigator.geolocation.getCurrentPosition(()=>{this.locationPermissionGranted=!0,t()},r=>{console.error("Geolocation error:",r),e(r)})})}catch{this.locationPermissionGranted=!1}this.updatePermissionStatus()}updatePermissionStatus(){const t=document.getElementById("motion-permission"),e=document.getElementById("location-permission");t&&(t.textContent=this.motionPermissionGranted?"Granted":"Not granted"),e&&(e.textContent=this.locationPermissionGranted?"Granted":"Not granted")}async startRecording(){this.isRecording||(await l.init(),this.isRecording=!0,this.motionPermissionGranted&&this.setupMotionListeners(),this.locationPermissionGranted&&this.setupLocationTracking(),this.updateUI())}stopRecording(){this.isRecording&&(this.isRecording=!1,this.motionHandler&&(window.removeEventListener("devicemotion",this.motionHandler),this.motionHandler=null),this.orientationHandler&&(window.removeEventListener("deviceorientation",this.orientationHandler),this.orientationHandler=null),this.watchId!==null&&(navigator.geolocation.clearWatch(this.watchId),this.watchId=null),this.updateUI())}setupMotionListeners(){this.motionHandler=t=>{if(!this.isRecording)return;const e={timestamp:Date.now(),accelerometer:t.acceleration?{x:t.acceleration.x||0,y:t.acceleration.y||0,z:t.acceleration.z||0}:void 0,gyroscope:t.rotationRate?{x:t.rotationRate.alpha||0,y:t.rotationRate.beta||0,z:t.rotationRate.gamma||0}:void 0};this.saveData(e)},this.orientationHandler=t=>{if(!this.isRecording)return;const e={timestamp:Date.now(),orientation:{alpha:t.alpha,beta:t.beta,gamma:t.gamma}};this.saveData(e)},window.addEventListener("devicemotion",this.motionHandler),window.addEventListener("deviceorientation",this.orientationHandler)}setupLocationTracking(){const t={enableHighAccuracy:!0,timeout:5e3,maximumAge:0};this.watchId=navigator.geolocation.watchPosition(e=>{if(!this.isRecording)return;const r={timestamp:Date.now(),location:{latitude:e.coords.latitude,longitude:e.coords.longitude,altitude:e.coords.altitude,accuracy:e.coords.accuracy,heading:e.coords.heading,speed:e.coords.speed}};this.saveData(r)},e=>console.error("Location error:",e),t)}async saveData(t){try{await l.addData(t),this.updateDataDisplay(t),this.updateDataCount()}catch(e){console.error("Error saving data:",e)}}updateDataDisplay(t){const e=document.getElementById("data-display");e&&(e.textContent=JSON.stringify(t,null,2))}async updateDataCount(){try{const t=await l.getDataCount(),e=document.getElementById("data-count");e&&(e.textContent=t.toString())}catch(t){console.error("Error getting data count:",t)}}updateUI(){const t=document.getElementById("recording-status"),e=document.getElementById("start-btn"),r=document.getElementById("stop-btn");t&&(t.textContent=this.isRecording?"Recording":"Stopped"),e&&(e.disabled=this.isRecording),r&&(r.disabled=!this.isRecording)}async exportJSON(){try{const t=await l.getAllData(),e=new Blob([JSON.stringify(t,null,2)],{type:"application/json"});this.downloadFile(e,`dead-reckoning-${new Date().toISOString()}.json`)}catch(t){console.error("Error exporting JSON:",t)}}async exportCSV(){try{const t=await l.getAllData(),e=this.convertToCSV(t),r=new Blob([e],{type:"text/csv"});this.downloadFile(r,`dead-reckoning-${new Date().toISOString()}.csv`)}catch(t){console.error("Error exporting CSV:",t)}}convertToCSV(t){if(t.length===0)return"";const e=["timestamp","accel_x","accel_y","accel_z","gyro_x","gyro_y","gyro_z","mag_x","mag_y","mag_z","orientation_alpha","orientation_beta","orientation_gamma","lat","lng","altitude","accuracy","heading","speed"],r=t.map(o=>{var n,i,u,m,g,h,y,p,f,w,b,E,D,v,P,S,I,R;return[o.timestamp,((n=o.accelerometer)==null?void 0:n.x)||"",((i=o.accelerometer)==null?void 0:i.y)||"",((u=o.accelerometer)==null?void 0:u.z)||"",((m=o.gyroscope)==null?void 0:m.x)||"",((g=o.gyroscope)==null?void 0:g.y)||"",((h=o.gyroscope)==null?void 0:h.z)||"",((y=o.magnetometer)==null?void 0:y.x)||"",((p=o.magnetometer)==null?void 0:p.y)||"",((f=o.magnetometer)==null?void 0:f.z)||"",((w=o.orientation)==null?void 0:w.alpha)||"",((b=o.orientation)==null?void 0:b.beta)||"",((E=o.orientation)==null?void 0:E.gamma)||"",((D=o.location)==null?void 0:D.latitude)||"",((v=o.location)==null?void 0:v.longitude)||"",((P=o.location)==null?void 0:P.altitude)||"",((S=o.location)==null?void 0:S.accuracy)||"",((I=o.location)==null?void 0:I.heading)||"",((R=o.location)==null?void 0:R.speed)||""]});return[e,...r].map(o=>o.join(",")).join(`
`)}downloadFile(t,e){const r=URL.createObjectURL(t),o=document.createElement("a");o.href=r,o.download=e,document.body.appendChild(o),o.click(),document.body.removeChild(o),URL.revokeObjectURL(r)}async clearData(){try{await l.clearData(),this.updateDataCount();const t=document.getElementById("data-display");t&&(t.textContent="No data collected yet")}catch(t){console.error("Error clearing data:",t)}}}const d=new N;document.addEventListener("DOMContentLoaded",async()=>{const a=document.getElementById("start-btn"),t=document.getElementById("stop-btn"),e=document.getElementById("export-json-btn"),r=document.getElementById("export-csv-btn"),o=document.getElementById("clear-data-btn");a==null||a.addEventListener("click",async()=>{try{await d.requestPermissions(),await d.startRecording()}catch(n){console.error("Error starting recording:",n)}}),t==null||t.addEventListener("click",()=>{d.stopRecording()}),e==null||e.addEventListener("click",()=>{d.exportJSON()}),r==null||r.addEventListener("click",()=>{d.exportCSV()}),o==null||o.addEventListener("click",async()=>{confirm("Are you sure you want to clear all data?")&&await d.clearData()});try{await d.requestPermissions()}catch{console.log("Initial permission request failed, will try again when starting recording")}});
